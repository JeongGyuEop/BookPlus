<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.board">

    <insert id="insertContent" parameterType="java.util.HashMap">
        insert into board(
            subject,
            content,
            writer,
            password,
            register_datetime,
           	place_name,
           	road_address_name,
           	place_url,
           	x,
           	y
        ) values(
            #{subject},
            #{content},
            #{writer},
            #{password},
            NOW(),
            #{place_name},
            #{road_address_name},
            #{place_url},
            #{x},
            #{y}
        )
    </insert>

    <update id="updateContent" parameterType="java.util.HashMap">
        update board
        set
            subject = #{subject},
            content = #{content},
            writer = #{writer},
            password = #{password},
            place_name = #{place_name},
            road_address_name = #{road_address_name},
            place_url = #{place_url},
            x = #{x},
            y = #{y}
        where
            id = #{id}
    </update>

    <select id="selectContentCnt" resultType="int" parameterType="java.util.HashMap">
        select count(id)
        from board
    </select>

    <select id="selectContent" resultType="Board" parameterType="java.util.HashMap">
        select
            b.id,
            b.subject,
            b.content,
            b.writer,
            b.register_datetime,
            m.member_name
        from
            board b
        join T_SHOPPING_MEMBER m
        on b.writer = m.member_id
        order by id
        limit #{start}, #{end}
    </select>

    <select id="selectContentView" resultType="Board" parameterType="java.util.HashMap">
        select
            b.id,
            b.subject,
            b.content,
            b.writer,
            b.place_name,
            b.place_url,
            b.road_address_name,
            b.x,
            b.y,
            m.member_name
        from
            board b
        join T_SHOPPING_MEMBER m
        on b.writer = m.member_id
        where
            b.id = #{id}
    </select>

    <insert id="insertBoardReply" parameterType="java.util.HashMap">
        <selectKey keyProperty="reply_id" resultType="string" order="BEFORE">
            select UUID() 
        </selectKey>
        insert into board_reply(
            reply_id,
            board_id,
            parent_id,
            depth,
            reply_content,
            reply_writer,
            reply_password
        ) values(
            #{reply_id},
            #{board_id},
            #{parent_id},
            #{depth},
            #{reply_content},
            #{reply_writer},
            #{reply_password}
        )
    </insert>

    <select id="selectBoardReplyList" resultType="BoardReply" parameterType="java.util.HashMap">
        select
            br.reply_id,
            br.board_id,
            br.parent_id,
            br.depth,
            br.reply_content,
            br.reply_writer,
            br.reply_password,
            m.member_name
        from
            board_reply br
        join T_SHOPPING_MEMBER m
        on br.reply_writer = m.member_id
        where
            board_id = #{id}
        order by reply_id asc
    </select>

    <delete id="deleteBoardReply" parameterType="java.util.HashMap">
        delete from board_reply
        where
            reply_id = #{reply_id}
            and reply_password = #{reply_password}
    </delete>

<delete id="deleteBoardReplyAll" parameterType="java.util.HashMap">
    delete from board_reply
    where reply_id in (
        select * from (
            select reply_id
            from board_reply
            where reply_id = #{reply_id}
            and reply_password = #{reply_password}
            union
            select reply_id
            from board_reply
            where parent_id = #{reply_id}
        ) as temp_table
    );
</delete>


    <select id="selectBoardCnt" resultType="int" parameterType="java.util.HashMap">
        select count(id)
        from board
        where
            id = #{id}
            and password = #{password}
    </select>

    <delete id="deleteBoard" parameterType="java.util.HashMap">
        delete from board
        where
            id = #{id}
            and password = #{password}
    </delete>

    <select id="selectReplyPassword" resultType="int" parameterType="java.util.HashMap">
        select count(*)
        from board_reply
        where
            reply_id = #{reply_id}
            and reply_password = #{reply_password}
    </select>

    <update id="updateReply" parameterType="java.util.HashMap">
        update board_reply
        set
            parent_id = #{parent_id},
            depth = #{depth},
            reply_content = #{reply_content},
            reply_writer = #{reply_writer},
            reply_password = #{reply_password}
        where
            reply_id = #{reply_id}
    </update>
    
<!-- 	<select id="findMemberIdByName" parameterType="String" resultType="String">
	    SELECT member_id
	    FROM T_SHOPPING_MEMBER
	    WHERE member_name = #{memberName}
	</select> -->

	
</mapper>
